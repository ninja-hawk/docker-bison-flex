Grammar

    0 $accept: input $end

    1 input: input line
    2      | line

    3 line: expr '\n'
    4     | line error '\n'

    5 expr: expr '+' term
    6     | expr '-' term
    7     | SQRT '(' expr ')'
    8     | SIN '(' expr ')'
    9     | ARCSIN '(' expr ')'
   10     | term

   11 term: term '*' factor
   12     | term '/' factor
   13     | term '%' factor
   14     | term '^' factor
   15     | factor

   16 factor: '(' expr ')'
   17       | '-' INTNUM
   18       | INTNUM
   19       | '-' DNUM
   20       | DNUM


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 3 4
    '%' (37) 13
    '(' (40) 7 8 9 16
    ')' (41) 7 8 9 16
    '*' (42) 11
    '+' (43) 5
    '-' (45) 6 17 19
    '/' (47) 12
    '^' (94) 14
    error (256) 4
    SQRT (258) 7
    SIN (259) 8
    ARCSIN (260) 9
    INTNUM <ival> (261) 17 18
    DNUM <dval> (262) 19 20


Nonterminals, with rules where they appear

    $accept (17)
        on left: 0
    input (18)
        on left: 1 2
        on right: 0 1
    line (19)
        on left: 3 4
        on right: 1 2 4
    expr <dval> (20)
        on left: 5 6 7 8 9 10
        on right: 3 5 6 7 8 9 16
    term <dval> (21)
        on left: 11 12 13 14 15
        on right: 5 6 10 11 12 13 14
    factor <dval> (22)
        on left: 16 17 18 19 20
        on right: 11 12 13 14 15


State 0

    0 $accept: . input $end

    SQRT    shift, and go to state 1
    SIN     shift, and go to state 2
    ARCSIN  shift, and go to state 3
    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    input   go to state 8
    line    go to state 9
    expr    go to state 10
    term    go to state 11
    factor  go to state 12


State 1

    7 expr: SQRT . '(' expr ')'

    '('  shift, and go to state 13


State 2

    8 expr: SIN . '(' expr ')'

    '('  shift, and go to state 14


State 3

    9 expr: ARCSIN . '(' expr ')'

    '('  shift, and go to state 15


State 4

   18 factor: INTNUM .

    $default  reduce using rule 18 (factor)


State 5

   20 factor: DNUM .

    $default  reduce using rule 20 (factor)


State 6

   17 factor: '-' . INTNUM
   19       | '-' . DNUM

    INTNUM  shift, and go to state 16
    DNUM    shift, and go to state 17


State 7

   16 factor: '(' . expr ')'

    SQRT    shift, and go to state 1
    SIN     shift, and go to state 2
    ARCSIN  shift, and go to state 3
    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr    go to state 18
    term    go to state 11
    factor  go to state 12


State 8

    0 $accept: input . $end
    1 input: input . line

    $end    shift, and go to state 19
    SQRT    shift, and go to state 1
    SIN     shift, and go to state 2
    ARCSIN  shift, and go to state 3
    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    line    go to state 20
    expr    go to state 10
    term    go to state 11
    factor  go to state 12


State 9

    2 input: line .
    4 line: line . error '\n'

    error  shift, and go to state 21

    $end    reduce using rule 2 (input)
    SQRT    reduce using rule 2 (input)
    SIN     reduce using rule 2 (input)
    ARCSIN  reduce using rule 2 (input)
    INTNUM  reduce using rule 2 (input)
    DNUM    reduce using rule 2 (input)
    '-'     reduce using rule 2 (input)
    '('     reduce using rule 2 (input)


State 10

    3 line: expr . '\n'
    5 expr: expr . '+' term
    6     | expr . '-' term

    '\n'  shift, and go to state 22
    '+'   shift, and go to state 23
    '-'   shift, and go to state 24


State 11

   10 expr: term .
   11 term: term . '*' factor
   12     | term . '/' factor
   13     | term . '%' factor
   14     | term . '^' factor

    '*'  shift, and go to state 25
    '/'  shift, and go to state 26
    '%'  shift, and go to state 27
    '^'  shift, and go to state 28

    $default  reduce using rule 10 (expr)


State 12

   15 term: factor .

    $default  reduce using rule 15 (term)


State 13

    7 expr: SQRT '(' . expr ')'

    SQRT    shift, and go to state 1
    SIN     shift, and go to state 2
    ARCSIN  shift, and go to state 3
    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr    go to state 29
    term    go to state 11
    factor  go to state 12


State 14

    8 expr: SIN '(' . expr ')'

    SQRT    shift, and go to state 1
    SIN     shift, and go to state 2
    ARCSIN  shift, and go to state 3
    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr    go to state 30
    term    go to state 11
    factor  go to state 12


State 15

    9 expr: ARCSIN '(' . expr ')'

    SQRT    shift, and go to state 1
    SIN     shift, and go to state 2
    ARCSIN  shift, and go to state 3
    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr    go to state 31
    term    go to state 11
    factor  go to state 12


State 16

   17 factor: '-' INTNUM .

    $default  reduce using rule 17 (factor)


State 17

   19 factor: '-' DNUM .

    $default  reduce using rule 19 (factor)


State 18

    5 expr: expr . '+' term
    6     | expr . '-' term
   16 factor: '(' expr . ')'

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    ')'  shift, and go to state 32


State 19

    0 $accept: input $end .

    $default  accept


State 20

    1 input: input line .
    4 line: line . error '\n'

    error  shift, and go to state 21

    $end    reduce using rule 1 (input)
    SQRT    reduce using rule 1 (input)
    SIN     reduce using rule 1 (input)
    ARCSIN  reduce using rule 1 (input)
    INTNUM  reduce using rule 1 (input)
    DNUM    reduce using rule 1 (input)
    '-'     reduce using rule 1 (input)
    '('     reduce using rule 1 (input)


State 21

    4 line: line error . '\n'

    '\n'  shift, and go to state 33


State 22

    3 line: expr '\n' .

    $default  reduce using rule 3 (line)


State 23

    5 expr: expr '+' . term

    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    term    go to state 34
    factor  go to state 12


State 24

    6 expr: expr '-' . term

    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    term    go to state 35
    factor  go to state 12


State 25

   11 term: term '*' . factor

    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    factor  go to state 36


State 26

   12 term: term '/' . factor

    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    factor  go to state 37


State 27

   13 term: term '%' . factor

    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    factor  go to state 38


State 28

   14 term: term '^' . factor

    INTNUM  shift, and go to state 4
    DNUM    shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    factor  go to state 39


State 29

    5 expr: expr . '+' term
    6     | expr . '-' term
    7     | SQRT '(' expr . ')'

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    ')'  shift, and go to state 40


State 30

    5 expr: expr . '+' term
    6     | expr . '-' term
    8     | SIN '(' expr . ')'

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    ')'  shift, and go to state 41


State 31

    5 expr: expr . '+' term
    6     | expr . '-' term
    9     | ARCSIN '(' expr . ')'

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    ')'  shift, and go to state 42


State 32

   16 factor: '(' expr ')' .

    $default  reduce using rule 16 (factor)


State 33

    4 line: line error '\n' .

    $default  reduce using rule 4 (line)


State 34

    5 expr: expr '+' term .
   11 term: term . '*' factor
   12     | term . '/' factor
   13     | term . '%' factor
   14     | term . '^' factor

    '*'  shift, and go to state 25
    '/'  shift, and go to state 26
    '%'  shift, and go to state 27
    '^'  shift, and go to state 28

    $default  reduce using rule 5 (expr)


State 35

    6 expr: expr '-' term .
   11 term: term . '*' factor
   12     | term . '/' factor
   13     | term . '%' factor
   14     | term . '^' factor

    '*'  shift, and go to state 25
    '/'  shift, and go to state 26
    '%'  shift, and go to state 27
    '^'  shift, and go to state 28

    $default  reduce using rule 6 (expr)


State 36

   11 term: term '*' factor .

    $default  reduce using rule 11 (term)


State 37

   12 term: term '/' factor .

    $default  reduce using rule 12 (term)


State 38

   13 term: term '%' factor .

    $default  reduce using rule 13 (term)


State 39

   14 term: term '^' factor .

    $default  reduce using rule 14 (term)


State 40

    7 expr: SQRT '(' expr ')' .

    $default  reduce using rule 7 (expr)


State 41

    8 expr: SIN '(' expr ')' .

    $default  reduce using rule 8 (expr)


State 42

    9 expr: ARCSIN '(' expr ')' .

    $default  reduce using rule 9 (expr)
